[00] Instruction { opcode: AddI, data: [4, 16, 4] } [0, 0, 0, 0, 0, 0]
[17] Instruction { opcode: AddI, data: [5, 2, 5] } [0, 0, 0, 0, 16, 0]
[18] Instruction { opcode: MulR, data: [5, 5, 5] } [0, 0, 0, 0, 17, 2]
[19] Instruction { opcode: MulR, data: [4, 5, 5] } [0, 0, 0, 0, 18, 4]
[20] Instruction { opcode: MulI, data: [5, 11, 5] } [0, 0, 0, 0, 19, 76]
[21] Instruction { opcode: AddI, data: [3, 4, 3] } [0, 0, 0, 0, 20, 836]
[22] Instruction { opcode: MulR, data: [3, 4, 3] } [0, 0, 0, 4, 21, 836]
[23] Instruction { opcode: AddI, data: [3, 21, 3] } [0, 0, 0, 88, 22, 836]
[24] Instruction { opcode: AddR, data: [5, 3, 5] } [0, 0, 0, 109, 23, 836]
[25] Instruction { opcode: AddR, data: [4, 0, 4] } [0, 0, 0, 109, 24, 945]
[26] Instruction { opcode: SetI, data: [0, 5, 4] } [0, 0, 0, 109, 25, 945]
[01] Instruction { opcode: SetI, data: [1, 7, 1] } [0, 0, 0, 109, 0, 945]
[02] Instruction { opcode: SetI, data: [1, 8, 2] } [0, 1, 0, 109, 1, 945]
[03] Instruction { opcode: MulR, data: [1, 2, 3] } [0, 1, 1, 109, 2, 945]
[04] Instruction { opcode: EqRR, data: [3, 5, 3] } [0, 1, 1, 1, 3, 945]
[05] Instruction { opcode: AddR, data: [3, 4, 4] } [0, 1, 1, 0, 4, 945]
[06] Instruction { opcode: AddI, data: [4, 1, 4] } [0, 1, 1, 0, 5, 945]
[08] Instruction { opcode: AddI, data: [2, 1, 2] } [0, 1, 1, 0, 7, 945]
[09] Instruction { opcode: GtRR, data: [2, 5, 3] } [0, 1, 2, 0, 8, 945]
[10] Instruction { opcode: AddR, data: [4, 3, 4] } [0, 1, 2, 0, 9, 945]
[11] Instruction { opcode: SetI, data: [2, 1, 4] } [0, 1, 2, 0, 10, 945]
[03] Instruction { opcode: MulR, data: [1, 2, 3] } [0, 1, 2, 0, 2, 945]
[04] Instruction { opcode: EqRR, data: [3, 5, 3] } [0, 1, 2, 2, 3, 945]
[05] Instruction { opcode: AddR, data: [3, 4, 4] } [0, 1, 2, 0, 4, 945]
[06] Instruction { opcode: AddI, data: [4, 1, 4] } [0, 1, 2, 0, 5, 945]
[08] Instruction { opcode: AddI, data: [2, 1, 2] } [0, 1, 2, 0, 7, 945]
[09] Instruction { opcode: GtRR, data: [2, 5, 3] } [0, 1, 3, 0, 8, 945]
[10] Instruction { opcode: AddR, data: [4, 3, 4] } [0, 1, 3, 0, 9, 945]
[11] Instruction { opcode: SetI, data: [2, 1, 4] } [0, 1, 3, 0, 10, 945]
[03] Instruction { opcode: MulR, data: [1, 2, 3] } [0, 1, 3, 0, 2, 945]
[04] Instruction { opcode: EqRR, data: [3, 5, 3] } [0, 1, 3, 3, 3, 945]
[05] Instruction { opcode: AddR, data: [3, 4, 4] } [0, 1, 3, 0, 4, 945]
[06] Instruction { opcode: AddI, data: [4, 1, 4] } [0, 1, 3, 0, 5, 945]
[08] Instruction { opcode: AddI, data: [2, 1, 2] } [0, 1, 3, 0, 7, 945]
[09] Instruction { opcode: GtRR, data: [2, 5, 3] } [0, 1, 4, 0, 8, 945]
[10] Instruction { opcode: AddR, data: [4, 3, 4] } [0, 1, 4, 0, 9, 945]
[11] Instruction { opcode: SetI, data: [2, 1, 4] } [0, 1, 4, 0, 10, 945]
[03] Instruction { opcode: MulR, data: [1, 2, 3] } [0, 1, 4, 0, 2, 945]
[04] Instruction { opcode: EqRR, data: [3, 5, 3] } [0, 1, 4, 4, 3, 945]
[05] Instruction { opcode: AddR, data: [3, 4, 4] } [0, 1, 4, 0, 4, 945]
[06] Instruction { opcode: AddI, data: [4, 1, 4] } [0, 1, 4, 0, 5, 945]
[08] Instruction { opcode: AddI, data: [2, 1, 2] } [0, 1, 4, 0, 7, 945]
[09] Instruction { opcode: GtRR, data: [2, 5, 3] } [0, 1, 5, 0, 8, 945]
[10] Instruction { opcode: AddR, data: [4, 3, 4] } [0, 1, 5, 0, 9, 945]
[11] Instruction { opcode: SetI, data: [2, 1, 4] } [0, 1, 5, 0, 10, 945]
[03] Instruction { opcode: MulR, data: [1, 2, 3] } [0, 1, 5, 0, 2, 945]
[04] Instruction { opcode: EqRR, data: [3, 5, 3] } [0, 1, 5, 5, 3, 945]
[05] Instruction { opcode: AddR, data: [3, 4, 4] } [0, 1, 5, 0, 4, 945]
[06] Instruction { opcode: AddI, data: [4, 1, 4] } [0, 1, 5, 0, 5, 945]
[08] Instruction { opcode: AddI, data: [2, 1, 2] } [0, 1, 5, 0, 7, 945]
[09] Instruction { opcode: GtRR, data: [2, 5, 3] } [0, 1, 6, 0, 8, 945]
[10] Instruction { opcode: AddR, data: [4, 3, 4] } [0, 1, 6, 0, 9, 945]
[11] Instruction { opcode: SetI, data: [2, 1, 4] } [0, 1, 6, 0, 10, 945]
[03] Instruction { opcode: MulR, data: [1, 2, 3] } [0, 1, 6, 0, 2, 945]
[04] Instruction { opcode: EqRR, data: [3, 5, 3] } [0, 1, 6, 6, 3, 945]
[05] Instruction { opcode: AddR, data: [3, 4, 4] } [0, 1, 6, 0, 4, 945]
[06] Instruction { opcode: AddI, data: [4, 1, 4] } [0, 1, 6, 0, 5, 945]
[08] Instruction { opcode: AddI, data: [2, 1, 2] } [0, 1, 6, 0, 7, 945]
[09] Instruction { opcode: GtRR, data: [2, 5, 3] } [0, 1, 7, 0, 8, 945]
[10] Instruction { opcode: AddR, data: [4, 3, 4] } [0, 1, 7, 0, 9, 945]
[11] Instruction { opcode: SetI, data: [2, 1, 4] } [0, 1, 7, 0, 10, 945]
[03] Instruction { opcode: MulR, data: [1, 2, 3] } [0, 1, 7, 0, 2, 945]
[04] Instruction { opcode: EqRR, data: [3, 5, 3] } [0, 1, 7, 7, 3, 945]
[05] Instruction { opcode: AddR, data: [3, 4, 4] } [0, 1, 7, 0, 4, 945]
[06] Instruction { opcode: AddI, data: [4, 1, 4] } [0, 1, 7, 0, 5, 945]
[08] Instruction { opcode: AddI, data: [2, 1, 2] } [0, 1, 7, 0, 7, 945]
[09] Instruction { opcode: GtRR, data: [2, 5, 3] } [0, 1, 8, 0, 8, 945]
[10] Instruction { opcode: AddR, data: [4, 3, 4] } [0, 1, 8, 0, 9, 945]
[11] Instruction { opcode: SetI, data: [2, 1, 4] } [0, 1, 8, 0, 10, 945]
[03] Instruction { opcode: MulR, data: [1, 2, 3] } [0, 1, 8, 0, 2, 945]
[04] Instruction { opcode: EqRR, data: [3, 5, 3] } [0, 1, 8, 8, 3, 945]
[05] Instruction { opcode: AddR, data: [3, 4, 4] } [0, 1, 8, 0, 4, 945]
[06] Instruction { opcode: AddI, data: [4, 1, 4] } [0, 1, 8, 0, 5, 945]
[08] Instruction { opcode: AddI, data: [2, 1, 2] } [0, 1, 8, 0, 7, 945]
[09] Instruction { opcode: GtRR, data: [2, 5, 3] } [0, 1, 9, 0, 8, 945]
[10] Instruction { opcode: AddR, data: [4, 3, 4] } [0, 1, 9, 0, 9, 945]
[11] Instruction { opcode: SetI, data: [2, 1, 4] } [0, 1, 9, 0, 10, 945]
[03] Instruction { opcode: MulR, data: [1, 2, 3] } [0, 1, 9, 0, 2, 945]
[04] Instruction { opcode: EqRR, data: [3, 5, 3] } [0, 1, 9, 9, 3, 945]
[05] Instruction { opcode: AddR, data: [3, 4, 4] } [0, 1, 9, 0, 4, 945]
[06] Instruction { opcode: AddI, data: [4, 1, 4] } [0, 1, 9, 0, 5, 945]
[08] Instruction { opcode: AddI, data: [2, 1, 2] } [0, 1, 9, 0, 7, 945]
[09] Instruction { opcode: GtRR, data: [2, 5, 3] } [0, 1, 10, 0, 8, 945]
[10] Instruction { opcode: AddR, data: [4, 3, 4] } [0, 1, 10, 0, 9, 945]
[11] Instruction { opcode: SetI, data: [2, 1, 4] } [0, 1, 10, 0, 10, 945]
[03] Instruction { opcode: MulR, data: [1, 2, 3] } [0, 1, 10, 0, 2, 945]
[04] Instruction { opcode: EqRR, data: [3, 5, 3] } [0, 1, 10, 10, 3, 945]
[05] Instruction { opcode: AddR, data: [3, 4, 4] } [0, 1, 10, 0, 4, 945]
[06] Instruction { opcode: AddI, data: [4, 1, 4] } [0, 1, 10, 0, 5, 945]
[08] Instruction { opcode: AddI, data: [2, 1, 2] } [0, 1, 10, 0, 7, 945]
[09] Instruction { opcode: GtRR, data: [2, 5, 3] } [0, 1, 11, 0, 8, 945]
[10] Instruction { opcode: AddR, data: [4, 3, 4] } [0, 1, 11, 0, 9, 945]
[11] Instruction { opcode: SetI, data: [2, 1, 4] } [0, 1, 11, 0, 10, 945]
[03] Instruction { opcode: MulR, data: [1, 2, 3] } [0, 1, 11, 0, 2, 945]
[04] Instruction { opcode: EqRR, data: [3, 5, 3] } [0, 1, 11, 11, 3, 945]
[05] Instruction { opcode: AddR, data: [3, 4, 4] } [0, 1, 11, 0, 4, 945]
[06] Instruction { opcode: AddI, data: [4, 1, 4] } [0, 1, 11, 0, 5, 945]
[08] Instruction { opcode: AddI, data: [2, 1, 2] } [0, 1, 11, 0, 7, 945]
[09] Instruction { opcode: GtRR, data: [2, 5, 3] } [0, 1, 12, 0, 8, 945]
[10] Instruction { opcode: AddR, data: [4, 3, 4] } [0, 1, 12, 0, 9, 945]
1st answer = 0
